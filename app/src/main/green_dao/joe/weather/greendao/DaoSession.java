package joe.weather.greendao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import joe.weather.greendao.Weather;
import joe.weather.greendao.Now;
import joe.weather.greendao.Forecast;
import joe.weather.greendao.Alert;

import joe.weather.greendao.WeatherDao;
import joe.weather.greendao.NowDao;
import joe.weather.greendao.ForecastDao;
import joe.weather.greendao.AlertDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig weatherDaoConfig;
    private final DaoConfig nowDaoConfig;
    private final DaoConfig forecastDaoConfig;
    private final DaoConfig alertDaoConfig;

    private final WeatherDao weatherDao;
    private final NowDao nowDao;
    private final ForecastDao forecastDao;
    private final AlertDao alertDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        weatherDaoConfig = daoConfigMap.get(WeatherDao.class).clone();
        weatherDaoConfig.initIdentityScope(type);

        nowDaoConfig = daoConfigMap.get(NowDao.class).clone();
        nowDaoConfig.initIdentityScope(type);

        forecastDaoConfig = daoConfigMap.get(ForecastDao.class).clone();
        forecastDaoConfig.initIdentityScope(type);

        alertDaoConfig = daoConfigMap.get(AlertDao.class).clone();
        alertDaoConfig.initIdentityScope(type);

        weatherDao = new WeatherDao(weatherDaoConfig, this);
        nowDao = new NowDao(nowDaoConfig, this);
        forecastDao = new ForecastDao(forecastDaoConfig, this);
        alertDao = new AlertDao(alertDaoConfig, this);

        registerDao(Weather.class, weatherDao);
        registerDao(Now.class, nowDao);
        registerDao(Forecast.class, forecastDao);
        registerDao(Alert.class, alertDao);
    }
    
    public void clear() {
        weatherDaoConfig.getIdentityScope().clear();
        nowDaoConfig.getIdentityScope().clear();
        forecastDaoConfig.getIdentityScope().clear();
        alertDaoConfig.getIdentityScope().clear();
    }

    public WeatherDao getWeatherDao() {
        return weatherDao;
    }

    public NowDao getNowDao() {
        return nowDao;
    }

    public ForecastDao getForecastDao() {
        return forecastDao;
    }

    public AlertDao getAlertDao() {
        return alertDao;
    }

}
